Assorted Tips and Tricks for TestNG:
====================================

 * If you specify a method as @Test in the following way:
   
   @Test
   public void xy() {}
   
   and don't specify the class as a whole as @Test - then only
   that method is invoked - no other @BeforeXXX or @AfterXXX
   
   Therefore make sure to mark the whole class as @Test when you
   have @BeforeXXX or @AfterXXX in that class!
   
 * Alternative, if you have a class which is not defined as @Test
   (this can include a base class for example where it is not
   feasible to mark it as @Test - esp you dont want to add
   any group to base classes thus the @Test wouldnt even have
   an effect):
   
   you can always mark a method with alwaysRun:
   
   @AfterMethod(alwaysRun=true)
   public void tearDown() {}
   
   This makes sure that this method is run, when a test method 
   in this or a subclass is run

 * Running a single class and a group of classes can have sideeffects
   on @BeforeXXX/@AfterXXX:
   
   When explicitly running a class as a TestNG Test (in Eclipse),
   then all @BeforeXXX/@AfterXXX methods are executed, irrespective
   of the alwaysRun - that is what you would normally expect.
   
   BUT WATCH OUT! When you run the same test as part of a group
   or package, then @BeforeXXX/@AfterXXX is ONLY RUN when
   the whole class is marked as @Test:
   
   @Test
   public class MyTestClass { }